class Solution:
    def validTree(self, n: int, edges: List[List[int]]) -> bool:

        adjList = []
        for i in range(n):
            adjList.append([])
        for edge in edges:
            adjList[edge[0]].append(edge[1])
            adjList[edge[1]].append(edge[0])
        print(adjList)
        parent = {}
        parent[0] = -1
        dfs = []
        dfs.append(0)
        while dfs:
            curr = dfs.pop()
            for child in adjList[curr]:
                if child in parent and child != parent[curr]:
                    return False
                
                if child != parent[curr]:
                    dfs.append(child)
                    parent[child] = curr
        return len(parent) ==n
                    
