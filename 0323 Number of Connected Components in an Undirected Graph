class Solution:
    def countComponents(self, n: int, edges: List[List[int]]) -> int:
        adjList = []
        # adjList = [0]*n
        for i in range(n):
            adjList.append([])
        print(adjList)
        for edge in edges:
            adjList[edge[0]].append(edge[1])
            adjList[edge[1]].append(edge[0])
        visited = set()
        def dfs(node:int):
            dfs = []
            dfs.append(node)
            
            while dfs:
                curr = dfs.pop()
                visited.add(curr)
                for child in adjList[curr]:
                    if child not in visited:
                        dfs.append(child)
        res = 0
        for i in range(len(adjList)):
            if i not in visited:
                res+=1
                dfs(i)
        return res
            
