class Solution:
    def uniquePaths(self, m: int, n: int) -> int:
        rows, cols = m , n
        dp = []
        for i in range(rows):
            dp.append([0]*cols)
        dp[-1][-1] = 1
        for row in reversed(range(rows)):
            for col in reversed(range(cols)):
                if row == rows-1 and col == cols-1:
                    continue
                paths = 0
                if row+1 < rows:
                    paths += dp[row+1][col]
                if col + 1 < cols:
                    paths += dp[row][col+1]
                    
                dp[row][col] = paths
        print(dp)
        return dp[0][0]
