class Solution:
    def evalRPN(self, tokens: List[str]) -> int:
        stack = []
        for char in tokens:
            try:
                int(char)
                is_dig = True
            except ValueError:
                is_dig = False
            if is_dig:
                stack.append(char)
            else:
                op2 = int(stack.pop())
                op1 = int(stack.pop())
                if char == "+":
                    stack.append(op1 + op2)
                if char == "-":
                    stack.append(op1 - op2)
                if char == "*":
                    stack.append(op1 * op2)
                if char == "/":
                    stack.append(op1 / op2)
        return floor(int(stack[0]))
