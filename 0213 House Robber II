class Solution:
    def rob(self, nums: List[int]) -> int:
        #this method is the ordinary house robbing algorithm without circular array
        def rob_helper(nums: List[int]) -> int:
            if len(nums) ==1:
                return nums[0]
            if len(nums) == 2:
                return max(nums[0],nums[1])
            dp = [0]*len(nums)
            dp[0],dp[1], = nums[0], max(nums[0],nums[1])
            for i in range(2,len(dp)):
                dp[i] = max(dp[i-2] +nums[i],dp[i-1])
            print(dp)
            return max(dp[-1],dp[-2])
        if len(nums) <=3: 
            return max(nums)
        return max(rob_helper(nums[1:]),rob_helper(nums[:len(nums)-1]))
